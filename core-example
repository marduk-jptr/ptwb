#include <iostream>
#include <vector>
#include <string>
#include <random>

// Generate a random sentence in German
std::string generateGermanSentence() {
    std::vector<std::string> words = {"Ich", "Du", "Er", "Sie", "Wir", "Ihr", "Sie",
                                      "spiele", "gehe", "liebe", "spreche", "lese", "schwimme",
                                      "Ball", "Haus", "Blumen", "Buch", "Fisch", "Sonne"};

    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dist(0, words.size() - 1);

    std::string sentence;
    for (int i = 0; i < 3; ++i) {
        sentence += words[dist(gen)] + " ";
    }
    sentence[0] = toupper(sentence[0]); // Capitalize the first letter
    sentence += ".";
    return sentence;
}

// Generate a random sentence in English
std::string generateEnglishSentence() {
    std::vector<std::string> words = {"I", "You", "He", "She", "We", "They",
                                      "play", "go", "love", "speak", "read", "swim",
                                      "ball", "house", "flowers", "book", "fish", "sun"};

    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dist(0, words.size() - 1);

    std::string sentence;
    for (int i = 0; i < 3; ++i) {
        sentence += words[dist(gen)] + " ";
    }
    sentence[0] = toupper(sentence[0]); // Capitalize the first letter
    sentence += ".";
    return sentence;
}

int main() {
    int numSentences;
    char languageChoice;

    std::cout << "Choose a language (d - German, e - English): ";
    std::cin >> languageChoice;

    std::cout << "Enter the number of sentences: ";
    std::cin >> numSentences;

    std::string (*generateSentence)();
    switch (languageChoice) {
        case 'd':
            generateSentence = generateGermanSentence;
            break;
        case 'e':
            generateSentence = generateEnglishSentence;
            break;
        default:
            std::cout << "Invalid language choice. Choose 'd' or 'e'." << std::endl;
            return 1;
    }

    for (int i = 0; i < numSentences; ++i) {
        std::cout << generateSentence() << std::endl;
    }

    return 0;
}
